// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  provider_id       String
  provider_user_id  Int     @unique
  user_id           String  @unique
  user              User    @relation(references: [id], fields: [user_id])
}

model User {
  id        String    @id @default(cuid())
  name      String
  email     String
  sessions  Session[]
  accounts  Account[]
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Day {
  id      String @id @default(cuid())
  date    DateTime   
  events  EventDayPeriod[]
}

model Period {
  id        String @id @default(cuid())
  startTime DateTime @db.Time
  endTime   DateTime @db.Time
  events    EventDayPeriod[]
}

model EventDayPeriod {
  id        String  @id @default(cuid())
  local     String?
  day_id    String
  period_id String
  event_id  String
  day       Day     @relation(references: [id], fields: [day_id])
  period    Period  @relation(references: [id], fields: [period_id])
  event     Event   @relation(references: [id], fields: [event_id])
}


model Event {
  id        String   @id @default(cuid())
  name      String
  link      String?
  periods   EventDayPeriod[]
}

model Post {
  id            String   @id @default(cuid())
  created_at    DateTime @default(now())
  title         String
  subtitle      String
  description   String   @db.Text
  dateTime      DateTime?
  local         String?
  images        Image[]
  notifications Notification[]
}

model Image {
  id        String @id @default(cuid())
  public_id String
  post_id   String
  post      Post   @relation(references: [id], fields: [post_id], onDelete: Cascade)
}

model Notification {
  id      String @id @default(cuid())
  post_id String
  post    Post   @relation(references: [id], fields: [post_id], onDelete: Cascade)
}

model PushToken {
  id    String @id @default(cuid())
  token String @unique
}